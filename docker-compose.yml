services:
  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo-data:/data/db
    networks:
      - internal

  mongo-init:
    image: mongo
    depends_on:
      - mongo
    entrypoint: >
      bash -c "
        sleep 5;
        echo 'rs.initiate()' | mongosh mongo:27017;
        sleep 5;
      "
    networks:
      - internal

  rocketchat:
    image: rocketchat/rocket.chat
    hostname: rocketchat
    container_name: rocketchat
    environment:
      MONGO_URL: mongodb://mongo:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongo:27017/local?replicaSet=rs0
      ROOT_URL: ${ROCKETCHAT_HOST}:${ROCKETCHAT_PORT}
      PORT: ${ROCKETCHAT_PORT}
    ports:
      - "${ROCKETCHAT_PORT}:3000"
    depends_on:
      - mongo
      - mongo-init
    networks:
      - internal

  keycloak:
    image: quay.io/keycloak/keycloak
    hostname: keycloak
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: dev-file
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - ./keycloak-data:/opt/keycloak/data
    networks:
      - internal

  frontend:
    build:
      context: sso-app
    hostname: sso-app
    container_name: sso-app
    ports:
      - "${SSO_APP_PORT}:80"
    depends_on:
      - keycloak
    networks:
      - internal

volumes:
  mongo-data:

networks:
  internal:
